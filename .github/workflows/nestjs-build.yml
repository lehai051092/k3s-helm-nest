name: Deploy and Control NestJS App

on:
  workflow_dispatch:
    inputs:
      revision:
        description: 'Revision number to rollback to (optional - leave blank to use the last stable release)'
        required: false
        type: integer
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to k3s Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.K3S_REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.K3S_REGISTRY_URL }}/nestjs-app:${{ github.sha }} .
          docker push ${{ secrets.K3S_REGISTRY_URL }}/nestjs-app:${{ github.sha }}
          docker tag ${{ secrets.K3S_REGISTRY_URL }}/nestjs-app:${{ github.sha }} ${{ secrets.K3S_REGISTRY_URL }}/nestjs-app:latest
          docker push ${{ secrets.K3S_REGISTRY_URL }}/nestjs-app:latest

  notify-slack-if-build-success:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Notify Slack about the build
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "list_approve": "${{ secrets.SLACK_LIST_APPROVE }}",
              "title": "GitHub Action build result: ${{ job.status }}",
              "text": "Please check the commit and approve if you can.\n${{ github.event.pull_request.html_url || github.event.head_commit.url }} \n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  notify-slack-if-build-failure:
    runs-on: ubuntu-latest
    needs: build
    if: failure()
    steps:
      - name: Notify Slack about the build
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "list_approve": "${{ secrets.SLACK_LIST_APPROVE }}",
              "title": "GitHub Action build result: ${{ job.status }}",
              "text": "Please check the commit and find the cause of the error.\n${{ github.event.pull_request.html_url || github.event.head_commit.url }} \n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  helm-packages:
    environment: production
    runs-on: ubuntu-latest
    needs: notify-slack-if-build-success
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install OCI Helm plugin
        run: |
          export HELM_EXPERIMENTAL_OCI=1
      - name: Log in to Docker Registry
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | helm registry login ${{ secrets.K3S_REGISTRY_URL }} -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin
      - name: Package and Push Helm Chart
        run: |
          helm package ./nest-app
          helm push ./nest-app-1.0.0.tgz oci://${{ secrets.K3S_REGISTRY_URL }}/${{ secrets.HELM_REPO_NAME }}/nest-app

  helm-deploy:
    runs-on: ubuntu-latest
    needs: helm-packages
    if: success()
    steps:
      - run: eval $(ssh-agent -s)
      - run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
          ssh-keyscan -H $SSH_SERVER_IP >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          pwd && ls -la
          ssh ${SSH_USER}@${$SSH_SERVER_IP} "helm pull oci://${{ secrets.K3S_REGISTRY_URL }}/${{ secrets.HELM_REPO_NAME }}/nest-app --version 1.0.0"
          ssh ${SSH_USER}@${$SSH_SERVER_IP} "helm upgrade --install nest-app oci://${{ secrets.K3S_REGISTRY_URL }}/${{ secrets.HELM_REPO_NAME }}/nest-app --version 1.0.0 --namespace ${{ secrets.NAME_SPACE }} --create-namespace --values your-values-file.yaml"
          ssh ${SSH_USER}@${$SSH_SERVER_IP} "kubectl rollout restart deploy -n ${{ secrets.NAME_SPACE }}"

  notify-slack-if-deploy-success:
    runs-on: ubuntu-latest
    needs: helm-deploy
    if: success()
    steps:
      - name: Notify Slack about the build
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "list_approve": "${{ secrets.SLACK_LIST_APPROVE }}",
              "title": "GitHub Action build result: ${{ job.status }}",
              "text": "Release success.\n${{ github.event.pull_request.html_url || github.event.head_commit.url }} \n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  helm-rollback:
    runs-on: ubuntu-latest
    needs: helm-deploy
    if: failure()
    steps:
      - name: Notify Slack about the build
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "list_approve": "${{ secrets.SLACK_LIST_APPROVE }}",
              "title": "GitHub Action build result: ${{ job.status }}",
              "text": "Release fail. Please check the commit and find the cause of the error.\n${{ github.event.pull_request.html_url || github.event.head_commit.url }} \n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      - name: Display Helm History
        run: helm history nest-app
      - name: Rollback to specified revision or last stable release
        run: |
          if [ "${{ github.event.inputs.revision }}" == "" ]; then
            echo "No revision input. Rolling back to the last stable release..."
            helm rollback nest-app 0
          else
            echo "Rolling back to revision ${{ github.event.inputs.revision }}..."
            helm rollback nest-app ${{ github.event.inputs.revision }}
          endif
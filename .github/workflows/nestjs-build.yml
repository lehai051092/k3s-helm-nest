name: Deploy and Control NestJS App

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      repo_digests: ${{ steps.set-variable.outputs.repo_digests }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to k3s Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.K3S_REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.K3S_REGISTRY_URL }}/nestjs-app:${{ github.sha }} .
          docker push ${{ secrets.K3S_REGISTRY_URL }}/nestjs-app:${{ github.sha }}
          docker tag ${{ secrets.K3S_REGISTRY_URL }}/nestjs-app:${{ github.sha }} ${{ secrets.K3S_REGISTRY_URL }}/nestjs-app:latest
          docker push ${{ secrets.K3S_REGISTRY_URL }}/nestjs-app:latest
      - name: Set variable output
        id: set-variable
        shell: bash
        run: |
          repo_digests=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ secrets.K3S_REGISTRY_URL }}/nestjs-app:latest)
          echo "repo_digests=${repo_digests: -64}" >> "$GITHUB_OUTPUT"

  notify-slack-if-build-success:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Notify Slack about the build
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "list_approve": "${{ secrets.SLACK_LIST_APPROVE }}",
              "title": "GitHub Action build result: ${{ job.status }}",
              "text": "Please check the commit and approve if you can.\n${{ github.event.pull_request.html_url || github.event.head_commit.url }} \n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  notify-slack-if-build-failure:
    runs-on: ubuntu-latest
    needs: build
    if: failure()
    steps:
      - name: Notify Slack about the build
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "list_approve": "${{ secrets.SLACK_LIST_APPROVE }}",
              "title": "GitHub Action build result: ${{ job.status }}",
              "text": "Please check the commit and find the cause of the error.\n${{ github.event.pull_request.html_url || github.event.head_commit.url }} \n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  helm-packages:
    environment: production
    runs-on: ubuntu-latest
    needs: notify-slack-if-build-success
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Helm
        run: |
          sudo snap install helm --classic
      - name: Package and Push Helm Chart
        run: |
          helm package ./k3s-nest
          helm plugin install https://github.com/chartmuseum/helm-push
          helm repo add ${{ secrets.HELM_REPO_NAME }} ${{ secrets.K3S_REGISTRY_URL }} --username ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }}
          helm repo update
          helm cm-push ./k3s-nest/ ${{ secrets.HELM_REPO_NAME }}

#  helm-deploy:
#    runs-on: ubuntu-latest
#    needs: helm-packages
#    if: success()
#    steps:
#      - eval $(ssh-agent -s)
#      - mkdir -p ~/.ssh
#      - chmod 700 ~/.ssh
#      - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
#      - ssh-keyscan -H $SSH_SERVER_IP >> ~/.ssh/known_hosts
#      - chmod 600 ~/.ssh/known_hosts
#      - pwd && ls -la
#      - ssh ${SSH_USER}@${$SSH_SERVER_IP} "helm repo add ${{ secrets.HELM_REPO_NAME }} --username ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }} ${{ secrets.K3S_REGISTRY_URL }}"
#      - ssh ${SSH_USER}@${$SSH_SERVER_IP} "helm repo update"
#      - ssh ${SSH_USER}@${$SSH_SERVER_IP} "helm upgrade --install $HELM_REPO_NAME $REPO_NAME/$CHART_NAME -n $NAME_SPACE --create-namespace"
#      - ssh ${SSH_USER}@${$SSH_SERVER_IP} "kubectl rollout restart deploy -n $NAME_SPACE"